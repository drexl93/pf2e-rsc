{"_id":"8kNde9ULqUBv7vTS","name":"GM Set Skill","type":"script","author":"cLtzHxyRtcUxjdPl","img":"icons/svg/clockwork.svg","scope":"global","command":"// Macro for the GM to run to set the DC and number of successes for the skill challenge\n// Can pick from a set of published combos (based off Locks) or create a custom one\n\nlet tokens = canvas.tokens.controlled.filter((t) =>\n  ['character'].includes(t.actor.data.type),\n)\n\nif (tokens.length > 1) {\n  ui.notifications.error('Please select only one pc token.')\n  return\n}\n\nif (tokens.length === 0) {\n  ui.notifications.error(`You must select at least one pc token`)\n}\n\nlet tokenID = tokens[0].id\n\n//console.log(\"tokenID \" + tokenID);\n//console.log(tokens);\n\nlet presets = {\n  poor: { DC: 15, successes: 2 },\n  simple: { DC: 20, successes: 3 },\n  average: { DC: 25, successes: 4 },\n  good: { DC: 30, successes: 5 },\n  superior: { DC: 40, successes: 6 },\n}\n\nconst skillRefs = {\n  Thievery: 'thi',\n  Acrobatics: 'acr',\n  Arcana: 'arc',\n  Athletics: 'ath',\n  Crafting: 'cra',\n  Deception: 'dec',\n  Diplomacy: 'dip',\n  Intimidation: 'itm',\n  Medicine: 'med',\n  Nature: 'nat',\n  Occultism: 'occ',\n  Performance: 'prf',\n  Religion: 'rel',\n  Society: 'soc',\n  Stealth: 'ste',\n  Survival: 'sur',\n}\n\nlet content = ''\nlet content2 = ''\nlet skill\nlet abort\nlet skillLabel\n\ncontent += `<div id=\"pf2e-rsc-preset\"><label for=\"preset\">Pick a preset: </label>\n<select name=\"preset\" id=\"preset\">\n  <option value=\"poor\">DC 15/2 successes</option>\n  <option value=\"simple\">DC 20/3 successes</option>\n  <option value=\"average\">DC 25/4 successes</option>\n  <option value=\"good\">DC 30/5 successes</option>\n  <option value=\"superior\">DC 40/6 successes</option>\n   <option value=\"custom\">Custom</option>\n</select></div>`\n\ncontent += `<div id=\"pf2e-rsc-chooseskill\"><label for=\"skill\">Choose a skill: </label>\n<select name=\"skill\" id=\"skill\">`\nfor (let i = 0; i < Object.keys(skillRefs).length; i++) {\n  content += `<option value=\"${skillRefs[Object.keys(skillRefs)[i]]}\">${\n    Object.keys(skillRefs)[i]\n  }</option>`\n}\ncontent += `</select></div>`\n\ncontent += `<div id=\"pf2e-rsc-stopcritfail\">Abort on Critical Failure?\n<div><input type=\"radio\" id=\"yes\" name=\"critfail\" value=\"yes\" ><label for=\"yes\">Yes</label>\n<input type=\"radio\" id=\"no\" name=\"critfail\" value=\"no\" checked><label for=\"no\">No</label>\n</div></div>`\n\ncontent2 += `<form id=\"pf2e-rsc-gm_skillset-content2\"><p><label for=\"pf2e-rsc-customDC\">DC: </label>\n<input type=\"text\" id=\"pf2e-rsc-customDC\" name=\"pf2e-rsc-customDC\"></p>\n\n<p><label for=\"successes\">Required Successes: </label>\n<input type=\"text\" id=\"successes\" name=\"successes\"></p></form>`\n\nlet dialog = new Dialog({\n  title: 'Skill Challenge',\n  content: content,\n  buttons: {\n    pick: {\n      icon: \"<i class='fas fa-check'></i>\",\n      label: 'Select',\n      callback: (html) => {\n        skill = html.find('#skill')[0].value\n        skillLabel = html.find('#skill')[0].selectedOptions[0].label\n        let preset = html.find('#preset')[0].value\n        abort = html.find(`#yes`)[0].checked\n        if (preset === 'custom') {\n          custom.options.width = 125\n          custom.position.width = 125\n          custom.render(true)\n        } else {\n          game.socket.emit('module.pf2e-rsc', {\n            operation: 'playerSkillChallenge',\n            neededSuccesses: presets[preset].successes,\n            DC: presets[preset].DC,\n            actor,\n            mod: actor.data.data.skills[skill].value,\n            skillLabel,\n            abort,\n            tokenID,\n          })\n          console.log('emit')\n          console.log('playerSkillChallenge')\n          console.log('neededSuccesses:' + presets[preset].successes)\n          console.log('DC:' + presets[preset].DC)\n          console.log('actor:' + actor)\n          console.log('mod:' + actor.data.data.skills[skill].value)\n          console.log('skillLabel:' + skillLabel)\n          console.log('abort' + abort)\n          console.log('tokenID' + tokenID)\n        }\n      },\n    },\n  },\n})\ndialog.options.width = 125\ndialog.position.width = 125\ndialog.render(true)\n\nlet custom = new Dialog({\n  title: 'Custom Challenge',\n  content: content2,\n  buttons: {\n    select: {\n      icon: \"<i class='fas fa-check'></i>\",\n      label: 'Select',\n      callback: (html) => {\n        let neededSuccesses = parseInt(html.find('#successes')[0].value)\n        let DC = parseInt(html.find('#pf2e-rsc-customDC')[0].value)\n        game.socket.emit('module.pf2e-rsc', {\n          operation: 'playerSkillChallenge',\n          neededSuccesses,\n          DC,\n          actor,\n          mod: actor.data.data.skills[skill].value,\n          skillLabel,\n          abort,\n          tokenID,\n        })\n      },\n    },\n  },\n})","folder":null,"sort":0,"permission":{"default":0,"KXgbVt5LZq9Kljfo":3,"cLtzHxyRtcUxjdPl":3},"flags":{"core":{"sourceId":"Macro.5k83F9NN8siWeWwb"}}}
